<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-28T13:07:27 IST" name="Default suite" finished-at="2025-08-28T13:07:40 IST" duration-ms="12329">
    <groups>
    </groups>
    <test started-at="2025-08-28T13:07:27 IST" name="Default test" finished-at="2025-08-28T13:07:40 IST" duration-ms="12329">
      <class name="QA.QA.ScriptingCode">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:QA.QA.ScriptingCode@12468a38]" started-at="2025-08-28T13:07:27 IST" name="beforeMethod" finished-at="2025-08-28T13:07:32 IST" duration-ms="5088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="toRunTestCases()[pri:0, instance:QA.QA.ScriptingCode@12468a38]" started-at="2025-08-28T13:07:32 IST" name="toRunTestCases" finished-at="2025-08-28T13:07:40 IST" duration-ms="7181" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\Users\user\eclipse-workspace\QA\src\data\java\TEST PROOFS \login page 1.jpg (The system cannot find the path specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\Users\user\eclipse-workspace\QA\src\data\java\TEST PROOFS \login page 1.jpg (The system cannot find the path specified)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:255)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:210)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:171)
at org.openqa.selenium.io.FileHandler.copyFile(FileHandler.java:133)
at org.openqa.selenium.io.FileHandler.copy(FileHandler.java:112)
at QA.QA.ReusedMethods.screenshot(ReusedMethods.java:19)
at QA.QA.ScriptingCode.login(ScriptingCode.java:16)
at QA.QA.RunTestCases.toRunTestCases(RunTestCases.java:12)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toRunTestCases -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:QA.QA.ScriptingCode@12468a38]" started-at="2025-08-28T13:07:40 IST" name="afterClass" finished-at="2025-08-28T13:07:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- QA.QA.ScriptingCode -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
